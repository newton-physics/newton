#usda 1.0
(
    doc = """Generated by Disney Research for testing purposes."""
    defaultPrim = "cartpole"
    timeCodesPerSecond = 1000
    kilogramsPerUnit = 1
    metersPerUnit = 1
    upAxis = "Z"
)

def PhysicsScene "World"
{
    float physics:gravityMagnitude = 9.8067
    vector3f physics:gravityDirection = (0, 0, -1)
}

def Xform "cartpole"
{
    # Model Frame
    quatd xformOp:orient = (1, 0, 0, 0)
    double3 xformOp:translate = (0, 0, 0)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient"]

    def Scope "RigidBodies"
    {
        def Xform "cart" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI"]
        )
        {
            # Body Frame
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient"]

            # Body Velocities
            vector3f physics:linearVelocity = (0, 0, 0)
            vector3f physics:angularVelocity = (0, 0, 0)

            # Mass Properties
            float physics:mass = 1.0
            point3f physics:centerOfMass = (0, 0, 0)
            quatf physics:principalAxes = (1, 0, 0, 0)
            float3 physics:diagonalInertia = (0.024166666, 0.006666667, 0.024166666)

            def Scope "Geometry"
            {
                def Cube "collisions" (
                    apiSchemas = ["PhysicsCollisionAPI"]
                )
                {
                    float3[] extent = [(-0.1, -0.25, -0.1), (0.1, 0.25, 0.1)]
                    uniform token purpose = "guide"
                    double size = 1
                    quatd xformOp:orient = (1, 0, 0, 0)
                    double3 xformOp:scale = (0.20000000298023224, 0.5, 0.20000000298023224)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                }
            }
        }

        def Xform "pole" (
            apiSchemas = ["PhysicsRigidBodyAPI", "PhysicsMassAPI"]
        )
        {
            # Body Frame
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:translate = (0.125, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient"]

            # Body Velocities
            vector3f physics:linearVelocity = (0, 0, 0)
            vector3f physics:angularVelocity = (0, 0, 0)

            # Mass Properties
            float physics:mass = 0.2
            point3f physics:centerOfMass = (0, 0, 0.375)
            float3 physics:diagonalInertia = (0.009416667, 0.009416667, 0.00008333333)
            quatf physics:principalAxes = (1, 0, 0, 0)

            def Scope "Geometry"
            {
                def Cube "collisions" (
                    apiSchemas = ["PhysicsCollisionAPI"]
                )
                {
                    float3[] extent = [(-0.025, -0.025, -0.375), (0.025, 0.025, 0.375)]
                    uniform token purpose = "guide"
                    double size = 1
                    quatd xformOp:orient = (1, 0, 0, 0)
                    double3 xformOp:scale = (0.05000000074505806, 0.05000000074505806, 0.75)
                    double3 xformOp:translate = (0, 0, 0.375)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
                }
            }
        }
    }

    def Scope "Joints"
    {
        def PhysicsPrismaticJoint "slider_to_cart" (
            apiSchemas = ["PhysicsDriveAPI:linear"]
        )
        {
            bool physics:jointEnabled = 1
            bool physics:collisionEnabled = 0
            float drive:linear:physics:maxForce = 1000
            uniform token drive:linear:physics:type = "force"
            uniform token physics:axis = "Y"
            rel physics:body1 = </cartpole/RigidBodies/cart>
            float physics:breakForce = 3.4028235e38
            float physics:breakTorque = 3.4028235e38
            point3f physics:localPos0 = (0, 0, 0)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (1, 0, 0, 0)
            quatf physics:localRot1 = (1, 0, 0, 0)
            float physics:lowerLimit = -4
            float physics:upperLimit = 4
        }

        def PhysicsRevoluteJoint "cart_to_pole"
        {
            bool physics:jointEnabled = 1
            bool physics:collisionEnabled = 0
            uniform token physics:axis = "X"
            rel physics:body0 = </cartpole/RigidBodies/cart>
            rel physics:body1 = </cartpole/RigidBodies/pole>
            point3f physics:localPos0 = (0.125, 0, 0)
            point3f physics:localPos1 = (0, 0, 0)
            quatf physics:localRot0 = (1, 0, 0, 0)
            quatf physics:localRot1 = (1, 0, 0, 0)
            float physics:lowerLimit = -inf
            float physics:upperLimit = inf
        }
    }

    def Scope "Meshes"
    {
    }

    def Scope "Materials"
    {
    }

    def Scope "StaticGeometry"
    {
        def Cube "guide"
        {
            float3[] extent = [(-0.015, -4, -0.015), (0.015, 4, 0.015)]
            uniform token purpose = "guide"
            double size = 1
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (0.029999999329447746, 8, 0.029999999329447746)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }
    }

    def Scope "Collisions"
    {
    }
}

